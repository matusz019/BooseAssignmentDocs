### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  id: MyIf
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes
  children:
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor(System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand(System.Action)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute(System.Func{System.String,System.Boolean})
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock
  langs:
  - csharp
  - vb
  name: MyIf
  nameWithType: MyIf
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  type: Class
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyIf.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: MyIf
    path: Classes/MyIf.cs
    startLine: 8
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Represents an "if" control structure capable of executing conditional blocks of commands.
  example: []
  syntax:
    content: public class MyIf
    content.vb: Public Class MyIf
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  langs:
  - csharp
  - vb
  name: MyIf(string)
  nameWithType: MyIf.MyIf(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.MyIf(string)
  type: Constructor
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyIf.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: .ctor
    path: Classes/MyIf.cs
    startLine: 19
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Initializes a new instance of the <xref href="ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf" data-throw-if-not-resolved="false"></xref> class with a specified condition.
  example: []
  syntax:
    content: public MyIf(string condition)
    parameters:
    - id: condition
      type: System.String
      description: The condition to evaluate for the "if" block.
    content.vb: Public Sub New(condition As String)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor*
  nameWithType.vb: MyIf.New(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.New(String)
  name.vb: New(String)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand(System.Action)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand(System.Action)
  id: AddCommand(System.Action)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  langs:
  - csharp
  - vb
  name: AddCommand(Action)
  nameWithType: MyIf.AddCommand(Action)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand(System.Action)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyIf.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: AddCommand
    path: Classes/MyIf.cs
    startLine: 31
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Adds a command to the current block ("if" or "else") being defined.
  example: []
  syntax:
    content: public void AddCommand(Action command)
    parameters:
    - id: command
      type: System.Action
      description: The command to add to the block.
    content.vb: Public Sub AddCommand(command As Action)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand*
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock
  id: SwitchToElseBlock
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  langs:
  - csharp
  - vb
  name: SwitchToElseBlock()
  nameWithType: MyIf.SwitchToElseBlock()
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock()
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyIf.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: SwitchToElseBlock
    path: Classes/MyIf.cs
    startLine: 47
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Switches to defining commands for the "else" block.
  example: []
  syntax:
    content: public void SwitchToElseBlock()
    content.vb: Public Sub SwitchToElseBlock()
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the "else" block is already defined.
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute(System.Func{System.String,System.Boolean})
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute(System.Func{System.String,System.Boolean})
  id: Execute(System.Func{System.String,System.Boolean})
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  langs:
  - csharp
  - vb
  name: Execute(Func<string, bool>)
  nameWithType: MyIf.Execute(Func<string, bool>)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute(System.Func<string, bool>)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyIf.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: Execute
    path: Classes/MyIf.cs
    startLine: 60
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Executes the appropriate block of commands based on the evaluation of the condition.
  example: []
  syntax:
    content: public void Execute(Func<string, bool> evaluateCondition)
    parameters:
    - id: evaluateCondition
      type: System.Func{System.String,System.Boolean}
      description: A function to evaluate the condition.
    content.vb: Public Sub Execute(evaluateCondition As Func(Of String, Boolean))
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute*
  nameWithType.vb: MyIf.Execute(Func(Of String, Boolean))
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute(System.Func(Of String, Boolean))
  name.vb: Execute(Func(Of String, Boolean))
references:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes
  commentId: N:ASE_Assignment_Mateusz_Chetkowski.Classes
  href: ASE_Assignment_Mateusz_Chetkowski.html
  name: ASE_Assignment_Mateusz_Chetkowski.Classes
  nameWithType: ASE_Assignment_Mateusz_Chetkowski.Classes
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes
  spec.csharp:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
  spec.vb:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.html
  name: MyIf
  nameWithType: MyIf
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.#ctor
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyIf__ctor_System_String_
  name: MyIf
  nameWithType: MyIf.MyIf
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.MyIf
  nameWithType.vb: MyIf.New
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyIf_AddCommand_System_Action_
  name: AddCommand
  nameWithType: MyIf.AddCommand
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.AddCommand
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyIf_SwitchToElseBlock
  name: SwitchToElseBlock
  nameWithType: MyIf.SwitchToElseBlock
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.SwitchToElseBlock
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyIf_Execute_System_Func_System_String_System_Boolean__
  name: Execute
  nameWithType: MyIf.Execute
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyIf.Execute
- uid: System.Func{System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<string, bool>
  nameWithType: Func<string, bool>
  fullName: System.Func<string, bool>
  nameWithType.vb: Func(Of String, Boolean)
  fullName.vb: System.Func(Of String, Boolean)
  name.vb: Func(Of String, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
