### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  id: MyArray
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes
  children:
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare(System.String,System.String,System.Int32)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize(System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue(System.String,System.Int32)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared(System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue(System.String,System.Int32,System.Object)
  langs:
  - csharp
  - vb
  name: MyArray
  nameWithType: MyArray
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  type: Class
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: MyArray
    path: Classes/MyArray.cs
    startLine: 8
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Manages the declaration and operations on arrays of different types.
  example: []
  syntax:
    content: public class MyArray
    content.vb: Public Class MyArray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor
  id: '#ctor'
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: MyArray()
  nameWithType: MyArray.MyArray()
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.MyArray()
  type: Constructor
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: .ctor
    path: Classes/MyArray.cs
    startLine: 15
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Initializes a new instance of the <xref href="ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MyArray()
    content.vb: Public Sub New()
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor*
  nameWithType.vb: MyArray.New()
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.New()
  name.vb: New()
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare(System.String,System.String,System.Int32)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare(System.String,System.String,System.Int32)
  id: Declare(System.String,System.String,System.Int32)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: Declare(string, string, int)
  nameWithType: MyArray.Declare(string, string, int)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare(string, string, int)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: Declare
    path: Classes/MyArray.cs
    startLine: 27
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Declares a new array of a specified type and size.
  example: []
  syntax:
    content: public void Declare(string name, string type, int size)
    parameters:
    - id: name
      type: System.String
      description: The name of the array.
    - id: type
      type: System.String
      description: The type of the array (e.g., "int" or "real").
    - id: size
      type: System.Int32
      description: The size of the array.
    content.vb: Public Sub [Declare](name As String, type As String, size As Integer)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the array is already declared or the size is invalid.
  nameWithType.vb: MyArray.Declare(String, String, Integer)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare(String, String, Integer)
  name.vb: Declare(String, String, Integer)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared(System.String)
  id: IsArrayDeclared(System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: IsArrayDeclared(string)
  nameWithType: MyArray.IsArrayDeclared(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared(string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: IsArrayDeclared
    path: Classes/MyArray.cs
    startLine: 50
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Checks if an array with the given name is declared.
  example: []
  syntax:
    content: public bool IsArrayDeclared(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the array to check.
    return:
      type: System.Boolean
      description: True if the array is declared, otherwise false.
    content.vb: Public Function IsArrayDeclared(name As String) As Boolean
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared*
  nameWithType.vb: MyArray.IsArrayDeclared(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared(String)
  name.vb: IsArrayDeclared(String)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue(System.String,System.Int32,System.Object)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue(System.String,System.Int32,System.Object)
  id: SetValue(System.String,System.Int32,System.Object)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: SetValue(string, int, object)
  nameWithType: MyArray.SetValue(string, int, object)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue(string, int, object)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: SetValue
    path: Classes/MyArray.cs
    startLine: 62
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Sets a value at a specific index in the array.
  example: []
  syntax:
    content: public void SetValue(string name, int index, object value)
    parameters:
    - id: name
      type: System.String
      description: The name of the array.
    - id: index
      type: System.Int32
      description: The index where the value will be set.
    - id: value
      type: System.Object
      description: The value to set at the specified index.
    content.vb: Public Sub SetValue(name As String, index As Integer, value As Object)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the array is not declared, the index is out of bounds, or there is a type mismatch.
  nameWithType.vb: MyArray.SetValue(String, Integer, Object)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue(String, Integer, Object)
  name.vb: SetValue(String, Integer, Object)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue(System.String,System.Int32)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue(System.String,System.Int32)
  id: GetValue(System.String,System.Int32)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: GetValue(string, int)
  nameWithType: MyArray.GetValue(string, int)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue(string, int)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: GetValue
    path: Classes/MyArray.cs
    startLine: 100
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Gets the value at a specific index in the array.
  example: []
  syntax:
    content: public object GetValue(string name, int index)
    parameters:
    - id: name
      type: System.String
      description: The name of the array.
    - id: index
      type: System.Int32
      description: The index of the value to retrieve.
    return:
      type: System.Object
      description: The value at the specified index in the array.
    content.vb: Public Function GetValue(name As String, index As Integer) As Object
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the array is not declared or the index is out of bounds.
  nameWithType.vb: MyArray.GetValue(String, Integer)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue(String, Integer)
  name.vb: GetValue(String, Integer)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize(System.String)
  id: GetSize(System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  langs:
  - csharp
  - vb
  name: GetSize(string)
  nameWithType: MyArray.GetSize(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize(string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: GetSize
    path: Classes/MyArray.cs
    startLine: 119
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Gets the size of the specified array.
  example: []
  syntax:
    content: public int GetSize(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the array.
    return:
      type: System.Int32
      description: The size of the array.
    content.vb: Public Function GetSize(name As String) As Integer
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the array is not declared.
  nameWithType.vb: MyArray.GetSize(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize(String)
  name.vb: GetSize(String)
references:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes
  commentId: N:ASE_Assignment_Mateusz_Chetkowski.Classes
  href: ASE_Assignment_Mateusz_Chetkowski.html
  name: ASE_Assignment_Mateusz_Chetkowski.Classes
  nameWithType: ASE_Assignment_Mateusz_Chetkowski.Classes
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes
  spec.csharp:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
  spec.vb:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html
  name: MyArray
  nameWithType: MyArray
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.#ctor
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray__ctor
  name: MyArray
  nameWithType: MyArray.MyArray
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.MyArray
  nameWithType.vb: MyArray.New
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.New
  name.vb: New
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray_Declare_System_String_System_String_System_Int32_
  name: Declare
  nameWithType: MyArray.Declare
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.Declare
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray_IsArrayDeclared_System_String_
  name: IsArrayDeclared
  nameWithType: MyArray.IsArrayDeclared
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.IsArrayDeclared
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray_SetValue_System_String_System_Int32_System_Object_
  name: SetValue
  nameWithType: MyArray.SetValue
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.SetValue
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray_GetValue_System_String_System_Int32_
  name: GetValue
  nameWithType: MyArray.GetValue
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetValue
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyArray_GetSize_System_String_
  name: GetSize
  nameWithType: MyArray.GetSize
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyArray.GetSize
