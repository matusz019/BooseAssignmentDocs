### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  id: MyInt
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes
  children:
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign(System.String,System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare(System.String,System.Int32)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression(System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get(System.String)
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables
  - ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared(System.String)
  langs:
  - csharp
  - vb
  name: MyInt
  nameWithType: MyInt
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  type: Class
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: MyInt
    path: Classes/MyInt.cs
    startLine: 10
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Manages the declaration and manipulation of integer variables, including arithmetic operations.
  example: []
  syntax:
    content: public class MyInt
    content.vb: Public Class MyInt
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor
  id: '#ctor'
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: MyInt()
  nameWithType: MyInt.MyInt()
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.MyInt()
  type: Constructor
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: .ctor
    path: Classes/MyInt.cs
    startLine: 17
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Initializes a new instance of the <xref href="ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MyInt()
    content.vb: Public Sub New()
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor*
  nameWithType.vb: MyInt.New()
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.New()
  name.vb: New()
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables
  id: GetAllVariables
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: GetAllVariables()
  nameWithType: MyInt.GetAllVariables()
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables()
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: GetAllVariables
    path: Classes/MyInt.cs
    startLine: 26
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Gets all declared integer variables.
  example: []
  syntax:
    content: public Dictionary<string, int> GetAllVariables()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: A dictionary of variable names and their values.
    content.vb: Public Function GetAllVariables() As Dictionary(Of String, Integer)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables*
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare(System.String,System.Int32)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare(System.String,System.Int32)
  id: Declare(System.String,System.Int32)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: Declare(string, int)
  nameWithType: MyInt.Declare(string, int)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare(string, int)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: Declare
    path: Classes/MyInt.cs
    startLine: 37
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Declares a new integer variable with an optional initial value.
  example: []
  syntax:
    content: public void Declare(string name, int value = 0)
    parameters:
    - id: name
      type: System.String
      description: The name of the variable.
    - id: value
      type: System.Int32
      description: The initial value of the variable. Defaults to 0.
    content.vb: Public Sub [Declare](name As String, value As Integer = 0)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the variable is already declared.
  nameWithType.vb: MyInt.Declare(String, Integer)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare(String, Integer)
  name.vb: Declare(String, Integer)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign(System.String,System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign(System.String,System.String)
  id: Assign(System.String,System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: Assign(string, string)
  nameWithType: MyInt.Assign(string, string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign(string, string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: Assign
    path: Classes/MyInt.cs
    startLine: 52
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Assigns a value to an existing variable, evaluating the provided expression.
  example: []
  syntax:
    content: public void Assign(string name, string expression)
    parameters:
    - id: name
      type: System.String
      description: The name of the variable to assign a value to.
    - id: expression
      type: System.String
      description: The arithmetic expression to evaluate and assign.
    content.vb: Public Sub Assign(name As String, expression As String)
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the variable is not declared or the expression is invalid.
  nameWithType.vb: MyInt.Assign(String, String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign(String, String)
  name.vb: Assign(String, String)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get(System.String)
  id: Get(System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: Get(string)
  nameWithType: MyInt.Get(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get(string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: Get
    path: Classes/MyInt.cs
    startLine: 68
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Retrieves the value of a declared variable.
  example: []
  syntax:
    content: public int Get(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the variable.
    return:
      type: System.Int32
      description: The value of the variable.
    content.vb: Public Function [Get](name As String) As Integer
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the variable is not declared.
  nameWithType.vb: MyInt.Get(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get(String)
  name.vb: Get(String)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared(System.String)
  id: IsVariableDeclared(System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: IsVariableDeclared(string)
  nameWithType: MyInt.IsVariableDeclared(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared(string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: IsVariableDeclared
    path: Classes/MyInt.cs
    startLine: 81
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Checks if a variable is declared.
  example: []
  syntax:
    content: public bool IsVariableDeclared(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the variable to check.
    return:
      type: System.Boolean
      description: True if the variable is declared, otherwise false.
    content.vb: Public Function IsVariableDeclared(name As String) As Boolean
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared*
  nameWithType.vb: MyInt.IsVariableDeclared(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared(String)
  name.vb: IsVariableDeclared(String)
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression(System.String)
  commentId: M:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression(System.String)
  id: EvaluateExpression(System.String)
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  langs:
  - csharp
  - vb
  name: EvaluateExpression(string)
  nameWithType: MyInt.EvaluateExpression(string)
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression(string)
  type: Method
  source:
    remote:
      path: ASE Assignment Mateusz Chetkowski/Classes/MyInt.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-matusz019.git
    id: EvaluateExpression
    path: Classes/MyInt.cs
    startLine: 92
  assemblies:
  - ASE Assignment Mateusz Chetkowski
  namespace: ASE_Assignment_Mateusz_Chetkowski.Classes
  summary: Evaluates an arithmetic expression, replacing variables with their values.
  example: []
  syntax:
    content: public int EvaluateExpression(string expression)
    parameters:
    - id: expression
      type: System.String
      description: The arithmetic expression to evaluate.
    return:
      type: System.Int32
      description: The result of the evaluated expression.
    content.vb: Public Function EvaluateExpression(expression As String) As Integer
  overload: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the expression is invalid or contains undeclared variables.
  nameWithType.vb: MyInt.EvaluateExpression(String)
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression(String)
  name.vb: EvaluateExpression(String)
references:
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes
  commentId: N:ASE_Assignment_Mateusz_Chetkowski.Classes
  href: ASE_Assignment_Mateusz_Chetkowski.html
  name: ASE_Assignment_Mateusz_Chetkowski.Classes
  nameWithType: ASE_Assignment_Mateusz_Chetkowski.Classes
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes
  spec.csharp:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
  spec.vb:
  - uid: ASE_Assignment_Mateusz_Chetkowski
    name: ASE_Assignment_Mateusz_Chetkowski
    href: ASE_Assignment_Mateusz_Chetkowski.html
  - name: .
  - uid: ASE_Assignment_Mateusz_Chetkowski.Classes
    name: Classes
    href: ASE_Assignment_Mateusz_Chetkowski.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  commentId: T:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
  parent: ASE_Assignment_Mateusz_Chetkowski.Classes
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html
  name: MyInt
  nameWithType: MyInt
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.#ctor
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt__ctor
  name: MyInt
  nameWithType: MyInt.MyInt
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.MyInt
  nameWithType.vb: MyInt.New
  fullName.vb: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.New
  name.vb: New
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_GetAllVariables
  name: GetAllVariables
  nameWithType: MyInt.GetAllVariables
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.GetAllVariables
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_Declare_System_String_System_Int32_
  name: Declare
  nameWithType: MyInt.Declare
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Declare
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_Assign_System_String_System_String_
  name: Assign
  nameWithType: MyInt.Assign
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Assign
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_Get_System_String_
  name: Get
  nameWithType: MyInt.Get
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.Get
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_IsVariableDeclared_System_String_
  name: IsVariableDeclared
  nameWithType: MyInt.IsVariableDeclared
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.IsVariableDeclared
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression*
  commentId: Overload:ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression
  href: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.html#ASE_Assignment_Mateusz_Chetkowski_Classes_MyInt_EvaluateExpression_System_String_
  name: EvaluateExpression
  nameWithType: MyInt.EvaluateExpression
  fullName: ASE_Assignment_Mateusz_Chetkowski.Classes.MyInt.EvaluateExpression
